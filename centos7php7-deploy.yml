---
- hosts: frontend
  tasks:
    - name: 1.Check if EPEL repo is already configured.
      stat: path=/etc/yum.repos.d/epel.repo
      register: epel_repofile_result

    - name: 2.Install EPEL repo.
      yum: name="https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm" state=present
      register: result
      when: not epel_repofile_result.stat.exists

    - name: 3.Import EPEL GPG key.
      rpm_key: key="https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7" state=present
      when: not epel_repofile_result.stat.exists

    - name: 4.Install WEBTATIC repo.
      yum: name="https://mirror.webtatic.com/yum/el7/webtatic-release.rpm" state=present
      register: result
     # when: not webtatic_repofile_result.stat.exists

    - name: 5.Install apache,modsec
      yum: name={{item}} state=installed
      with_items:
        - httpd
        - httpd-devel
        - httpd-tools
        - mod_security
        - mod_security_crs

    - name: 6.Install php7,npm
      yum: name={{item}} state=installed
      with_items:
        - php71w-common
        - mod_php71w
        - php71w-cli
        - php71w-gd
        - php71w-xml
        - php71w-pdo
        - php71w-mcrypt
        - php71w-mysqlnd
        - php71w-mbstring
        - nodejs
        - npm

    - name: 7.Download composer
      get_url: 
        url=https://getcomposer.org/installer dest=/tmp/installer
      tags: composer

    - name: 8.Install composer
      shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin
      args:
        creates: /usr/local/bin/composer
      tags: composer

    - name: 9.Rename composer.phar to composer
      shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
      args:
        creates: /usr/local/bin/composer
      tags: composer

    - name: 10.Make composer executable
      file: 
        path: /usr/local/bin/composer
        mode: a+x
        state: file
      tags: composer

    - name: mkdir ssl apache
      file: path=/etc/httpd/conf/ssl/ state=directory 

    - name: mkdir public apache
      file: path=/var/www/html/public/ state=directory

    - name: copy httpd conf 
      copy: src=files/frontend/mydomain.conf dest=/etc/httpd/conf.d/mydomain.conf
     # when: inventory_hostname == ""

    - name: copy httpd priv key
      copy: src=files/frontend/www_mydomain_RSA_private.key dest=/etc/httpd/conf/ssl/www_mydomain_RSA_private.key
     # when: inventory_hostname == ""

    - name: copy httpd cer
      copy: src=files/frontend/www_mydomain_RSA_intermediate.cer dest=/etc/httpd/conf/ssl/www_mydomain_RSA_intermediate.cer
     # when: inventory_hostname == ""

    - name: copy httpd rsa cer
      copy: src=files/frontend/www_mydomain_RSA.cer dest=/etc/httpd/conf/ssl/www_mydomain_RSA.cer
     # when: inventory_hostname == ""

    - name: start httpd service
      systemd: state=restarted enabled=yes name=httpd daemon_reload=yes

    - name: make sure daemon is reloaded (ansible bug)
      shell: systemctl daemon-reload

    - name: insert firewalld rule for haproxy http port
      firewalld: port={{ 80 }}/tcp permanent=true state=enabled immediate=yes
      when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

    - name: insert firewalld rule for haproxy https port
      firewalld: port={{ 443 }}/tcp permanent=true state=enabled immediate=yes
      when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"
